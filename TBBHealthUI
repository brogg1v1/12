-- Services
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local LocalPlayer = Players.LocalPlayer

-- NPC folders
local NPCFolders = workspace:WaitForChild("NPCFolders")
local FriendlyFolder = NPCFolders:WaitForChild("FriendlyFolder")
local EnemyFolder = NPCFolders:WaitForChild("EnemyFolder")

-- GUI setup
local ScreenGui = Instance.new("ScreenGui", LocalPlayer:WaitForChild("PlayerGui"))
ScreenGui.Name = "NPCHealthUI"

local header = Instance.new("Frame", ScreenGui)
header.Size = UDim2.new(0.18, 0, 0, 30)
header.Position = UDim2.new(0.4, 0, 0, 0)
header.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
header.BackgroundTransparency = 0.3
header.BorderSizePixel = 0
header.Draggable = true
header.Active = true

local headerText = Instance.new("TextLabel", header)
headerText.Size = UDim2.new(1, -60, 1, 0)
headerText.Text = "NPC Health Display"
headerText.TextColor3 = Color3.fromRGB(255, 255, 255)
headerText.Font = Enum.Font.SourceSansBold
headerText.TextSize = 14
headerText.BackgroundTransparency = 1
headerText.TextXAlignment = Enum.TextXAlignment.Left

local closeButton = Instance.new("TextButton", header)
closeButton.Size = UDim2.new(0, 30, 1, 0)
closeButton.Position = UDim2.new(1, -30, 0, 0)
closeButton.Text = "X"
closeButton.BackgroundColor3 = Color3.fromRGB(200, 0, 0)
closeButton.TextColor3 = Color3.fromRGB(255, 255, 255)
closeButton.Font = Enum.Font.SourceSansBold
closeButton.BorderSizePixel = 0

-- Threat Level Summary UI
local threatSummary = Instance.new("TextLabel", ScreenGui)
threatSummary.Size = UDim2.new(0.2, 0, 0, 30)
threatSummary.Position = UDim2.new(0.4, 0, 0.05, 0)
threatSummary.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
threatSummary.BackgroundTransparency = 0.5
threatSummary.TextColor3 = Color3.fromRGB(255, 255, 255)
threatSummary.Font = Enum.Font.SourceSansBold
threatSummary.TextSize = 16
threatSummary.Text = "Total Threat: 0"

-- Control Panel
local toggleButton = Instance.new("TextButton", ScreenGui)
toggleButton.Position = UDim2.new(0.4, 0, 0.1, 0)
toggleButton.Size = UDim2.new(0, 100, 0, 25)
toggleButton.Text = "Open Settings"
toggleButton.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
toggleButton.TextColor3 = Color3.fromRGB(255, 255, 255)
toggleButton.Font = Enum.Font.SourceSansBold

local settingsFrame = Instance.new("Frame", ScreenGui)
settingsFrame.Size = UDim2.new(0, 250, 0, 200)
settingsFrame.Position = UDim2.new(0.4, 0, 0.15, 0)
settingsFrame.Visible = false
settingsFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
settingsFrame.BorderSizePixel = 0

local function createSettingsToggle(name, position)
    local label = Instance.new("TextLabel", settingsFrame)
    label.Text = name
    label.Size = UDim2.new(0, 120, 0, 25)
    label.Position = position
    label.TextColor3 = Color3.fromRGB(255, 255, 255)
    label.BackgroundTransparency = 1

    local modeButton = Instance.new("TextButton", settingsFrame)
    modeButton.Size = UDim2.new(0, 100, 0, 25)
    modeButton.Position = position + UDim2.new(0, 130, 0, 0)
    modeButton.Text = "Auto"
    modeButton.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
    modeButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    modeButton.Font = Enum.Font.SourceSansBold
    return modeButton
end

local friendlyMode = createSettingsToggle("Friendly HP Color", UDim2.new(0, 10, 0, 10))
local enemyMode = createSettingsToggle("Enemy HP Color", UDim2.new(0, 10, 0, 40))

local colorInputs = {}
local function createColorInput(name, yOffset)
    local container = Instance.new("Frame", settingsFrame)
    container.Position = UDim2.new(0, 10, 0, yOffset)
    container.Size = UDim2.new(0, 230, 0, 25)
    container.BackgroundTransparency = 1

    local label = Instance.new("TextLabel", container)
    label.Text = name
    label.Size = UDim2.new(0, 60, 1, 0)
    label.BackgroundTransparency = 1
    label.TextColor3 = Color3.fromRGB(255, 255, 255)

    local input = Instance.new("TextBox", container)
    input.Size = UDim2.new(0, 40, 1, 0)
    input.Position = UDim2.new(0, 70, 0, 0)
    input.Text = "255"
    input.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    input.TextColor3 = Color3.fromRGB(0, 0, 0)
    input.ClearTextOnFocus = false
    colorInputs[name] = input
end

createColorInput("R", 70)
createColorInput("G", 100)
createColorInput("B", 130)

local function getManualColor()
    local r = tonumber(colorInputs["R"].Text) or 255
    local g = tonumber(colorInputs["G"].Text) or 255
    local b = tonumber(colorInputs["B"].Text) or 255
    return Color3.fromRGB(r, g, b)
end

local useManualColor = { Friendly = false, Enemy = false }

friendlyMode.MouseButton1Click:Connect(function()
    useManualColor.Friendly = not useManualColor.Friendly
    friendlyMode.Text = useManualColor.Friendly and "Manual" or "Auto"
end)

enemyMode.MouseButton1Click:Connect(function()
    useManualColor.Enemy = not useManualColor.Enemy
    enemyMode.Text = useManualColor.Enemy and "Manual" or "Auto"
end)

toggleButton.MouseButton1Click:Connect(function()
    settingsFrame.Visible = not settingsFrame.Visible
    toggleButton.Text = settingsFrame.Visible and "Close Settings" or "Open Settings"
end)

-- Billboard
local function createBillboard(npc, isFriendly)
    if npc:FindFirstChild("BillboardGui") then return end
    local gui = Instance.new("BillboardGui")
    gui.Name = "BillboardGui"
    gui.Adornee = npc:FindFirstChild("Head")
    gui.Size = UDim2.new(0, 200, 0, 140)
    gui.StudsOffset = Vector3.new(0, 3, 0)
    gui.AlwaysOnTop = true
    gui.Parent = npc

    local healthLabel = Instance.new("TextLabel", gui)
    healthLabel.Name = "healthLabel"
    healthLabel.Size = UDim2.new(1, 0, 0.2, 0)
    healthLabel.Position = UDim2.new(0, 0, 0, 0)
    healthLabel.BackgroundTransparency = 1
    healthLabel.Font = Enum.Font.SourceSansBold
    healthLabel.TextScaled = true

    local threatLevelLabel = Instance.new("TextLabel", gui)
    threatLevelLabel.Name = "threatLevelLabel"
    threatLevelLabel.Size = UDim2.new(1, 0, 0.2, 0)
    threatLevelLabel.Position = UDim2.new(0, 0, 1.0, 0)
    threatLevelLabel.BackgroundTransparency = 1
    threatLevelLabel.TextColor3 = Color3.fromRGB(255, 0, 0)
    threatLevelLabel.Font = Enum.Font.SourceSansBold
    threatLevelLabel.TextScaled = true

    RunService.RenderStepped:Connect(function()
        local humanoid = npc:FindFirstChild("Humanoid")
        if humanoid then
            local health = humanoid.Health
            local walkSpeed = humanoid.WalkSpeed
            local range = npc:GetAttribute("Range")
            local damage = npc:GetAttribute("Damage")
            local capped = function(v) return v == math.huge and nil or v end
            local h, r, d, s = capped(health), capped(range), capped(damage), capped(walkSpeed)
            local healthW, rangeW, damageW, speedW = 0.3, 0.2, 0.3, 0.2

            local threatLevel = (h or 0)*healthW + (r or 0)*rangeW + (d or 0)*damageW + (s or 0)*speedW
            threatLevelLabel.Text = "Threat Level: " .. string.format("%.2f", threatLevel)

            local colorMode = isFriendly and useManualColor.Friendly or useManualColor.Enemy
            if colorMode then
                healthLabel.TextColor3 = getManualColor()
            else
                healthLabel.TextColor3 = isFriendly and Color3.fromRGB(0, 255, 0) or Color3.fromRGB(255, 255, 255)
            end

            healthLabel.Text = npc.Name .. " HP: " .. math.floor(health)
        end
    end)
end

-- Billboard creation loop and threat sum
local totalThreat = 0
RunService.Heartbeat:Connect(function()
    totalThreat = 0
    for _, folder in ipairs({FriendlyFolder, EnemyFolder}) do
        local isFriendly = folder == FriendlyFolder
        for _, npc in ipairs(folder:GetChildren()) do
            if npc:FindFirstChild("Humanoid") then
                createBillboard(npc, isFriendly)

                local humanoid = npc:FindFirstChild("Humanoid")
                local health = humanoid.Health
                local walkSpeed = humanoid.WalkSpeed
                local range = npc:GetAttribute("Range")
                local damage = npc:GetAttribute("Damage")
                local capped = function(v) return v == math.huge and nil or v end
                local h, r, d, s = capped(health), capped(range), capped(damage), capped(walkSpeed)
                local healthW, rangeW, damageW, speedW = 0.3, 0.2, 0.3, 0.2
                local threatLevel = (h or 0)*healthW + (r or 0)*rangeW + (d or 0)*damageW + (s or 0)*speedW
                totalThreat += threatLevel * 0.7
            end
        end
    end

    threatSummary.Text = "Total Threat: " .. math.floor(totalThreat)
    if totalThreat > 6000 then
        threatSummary.TextColor3 = Color3.fromRGB(200, 0, 0)
    elseif totalThreat > 4000 then
        threatSummary.TextColor3 = Color3.fromRGB(255, 50, 50)
    elseif totalThreat > 2500 then
        threatSummary.TextColor3 = Color3.fromRGB(255, 100, 100)
    else
        threatSummary.TextColor3 = Color3.fromRGB(255, 255, 255)
    end
end)

-- Close UI
closeButton.MouseButton1Click:Connect(function()
    ScreenGui:Destroy()
end)
